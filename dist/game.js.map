{"version":3,"file":"game.js","mappings":"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","sources":["webpack:///./game/projectile.js","webpack:///./game/enemy.js","webpack:///./game/index.js","webpack:///./game/player.js","webpack:///./game/projectile_controller.js","webpack:///./game/enemy_controller.js","webpack:///./game/collision_controller.js","webpack:///./game/input.js"],"sourcesContent":["export default class Projectile{\n    constructor(player){\n        this.maxspeed = 5;\n        this.speedY = 5;\n\n        this.width = 15;\n        this.height = 15;\n\n        this.player = player;\n\n        this.position = {\n            x: this.player.position.x + player.width / 2,\n            y: this.player.position.y\n        };\n    }\n}","export default class Enemy{\n    constructor(GAME_WIDTH){\n        this.health = 3;\n\n\n        this.tempx = Math.floor(Math.random() * GAME_WIDTH);\n        if (this.tempx > GAME_WIDTH - this.width){\n            tempx = GAME_WIDTH - this.width;\n        };\n\n        this.position = {\n            x: this.tempx,\n            y: 0,\n        }\n\n        this.height = 30;\n        this.width = 30;\n\n        this.speedY = 2;\n    }\n\n\n}","import Player from \"./player\";\nimport InputHandler from \"./input\";\nimport Projectile_Controller from \"./projectile_controller\";\nimport Enemy_Controller from \"./enemy_controller\";\nimport Collision_Controller from \"./collision_controller\";\n\nconst canvas = document.getElementById(\"game_screen\");\nconst context = canvas.getContext(\"2d\");\n\nconst start_button = document.getElementById(\"button\");\nconst start_button_label = document.getElementById(\"b_label\");\n\nconst side_screen = document.getElementById(\"side_screen\");\nconst side_context = side_screen.getContext(\"2d\");\n\nconst controls = document.getElementById(\"control_pics\");\nconst control_context = controls.getContext(\"2d\");\n\nconst SIDE_WIDTH = 400;\nconst SIDE_HEIGHT = 150;\n\n// images\nconst projectile_img = new Image();\nprojectile_img.src = \"game/assets/images/projectile.png\";\n\nconst player_img = new Image();\nplayer_img.src = \"game/assets/images/person.png\";\n\nconst background_image = new Image();\nbackground_image.src = \"game/assets/images/tileset.png\";\n\nconst lose_message = new Image();\nlose_message.src = \"game/assets/images/lose_message.png\";\n\nconst control_pics = new Image();\ncontrol_pics.src = \"game/assets/images/controls.png\";\n\nconst enemies_pics = new Image();\nenemies_pics.src = \"game/assets/images/enemies.png\";\n// images\n\nconst GAME_WIDTH = 450; //add 415 for coordinates\nconst GAME_HEIGHT = 720;\n\nlet player = new Player(GAME_WIDTH, GAME_HEIGHT);\n\nlet projectile_controller = new Projectile_Controller(player);\n\nlet enemy_controller = new Enemy_Controller(GAME_WIDTH, GAME_HEIGHT);\n\nlet collision_controller = new Collision_Controller(projectile_controller, enemy_controller);\n\n//player.draw(context, player_img);\n\nlet last_time = 0;\n\nfunction game_loop(time_stamp){\n    let delta_time = time_stamp - last_time;\n    last_time = time_stamp;\n\n    if (player.lives == 0){\n        side_context.clearRect(0,0,SIDE_WIDTH,SIDE_HEIGHT);\n        side_context.fillText(\"Score:\", 0, SIDE_HEIGHT / 2);\n        side_context.fillText(player.score, 0, SIDE_HEIGHT / 2 + 30);\n        context.clearRect(0,0,GAME_WIDTH, GAME_HEIGHT);\n        context.drawImage(lose_message,\n                            490, //image position x\n                            580, //image position y\n                            1295, // image width\n                            195, // image height\n                            0,\n                            GAME_HEIGHT / 2 - 100,\n                            431,\n                            65);\n        start_button_label.style = \"display: block; margin-top: 10vh; margin-left: 4vw;\";\n        start_button_label.innerHTML = \n        \"<img src='game/assets/images/again_image.png' alt='no pic' id='image' style='height: 161px; width: 182px;'>\";\n        \n        return;\n    }\n\n    control_context.drawImage(control_pics, //draws controls\n        150,\n        230,\n        1415,\n        580,\n        0,\n        0,\n        353,\n        145);\n\n    context.clearRect(0,0,GAME_WIDTH,GAME_HEIGHT);\n    side_context.clearRect(0, 0, SIDE_WIDTH, SIDE_HEIGHT);\n\n    side_context.fillStyle = \"white\";\n\n    side_context.font = \"20px Arial\";\n    side_context.fillText(\"Lives\", 0, 20, 100);\n\n    side_context.font = \"30px Arial\";\n    side_context.fillText(player.score, 0, 150, 100);\n\n    player.update(delta_time);\n    player.draw(context, player_img);\n    player.draw_lives(side_context, player_img);\n\n    enemy_controller.spawn();\n    enemy_controller.enemies.forEach(enemy => {\n        enemy_controller.draw(context, enemy, player, enemies_pics);\n        enemy_controller.update(delta_time, enemy);\n    });\n\n    \n\n    projectile_controller.projectiles.forEach(projectile => {\n        projectile_controller.draw(context, projectile, projectile_img);\n        projectile_controller.update(delta_time, projectile)\n    });\n\n    collision_controller.enemy_projectile_collision(player);\n\n    requestAnimationFrame(game_loop);\n    \n}\n\nnew InputHandler(player, projectile_controller, start_button);\n\n\nstart_button.addEventListener(\"click\", (e) => {\n    start_button_label.style = \"display: none\";\n    player.reset();\n    enemy_controller.reset();\n    projectile_controller.reset();\n    player.draw(context, player_img);\n    game_loop();\n});","export default class Player{\n    constructor(gameWidth, gameHeight) {\n        this.width = 30;\n        this.height = 30;\n\n        this.img_width = 875;\n        this.img_height = 745;\n\n        this.img_position_x = 680;\n        this.img_position_y = 260;\n        \n        this.gameWidth = gameWidth;\n        this.gameHeight = gameHeight;\n\n        this.position = {\n            x: gameWidth / 2 - this.width / 2,\n            y: gameHeight - this.height - 10,\n        }\n\n        this.maxSpeed = 5;\n        this.Xspeed = 0;\n        this.Yspeed = 0;\n\n        this.lives = 3;\n\n        this.score = 0;\n    }\n\n    draw_lives(side_context, player_img){\n        for (let x = 0; x < this.lives; x += 1){\n            side_context.drawImage(player_img,\n                                    this.img_position_x,\n                                    this.img_position_y,\n                                    this.img_width,\n                                    this.img_height,\n                                    60 * x,\n                                    50,\n                                    50,\n                                    50);\n        };\n    }\n\n    draw(context, player_img) {\n        //context.fillStyle = \"black\";\n        //context.fillRect(this.position.x, this.position.y, this.width, this.height);\n        /*\n        context.beginPath();\n        context.moveTo(this.position.x + (this.width / 2), this.position.y);\n        context.lineTo(this.position.x + this.width, this.position.y + this.height);\n        context.lineTo(this.position.x, this.position.y + this.height);\n        context.stroke();\n\n        context.fillStyle = \"white\";\n        context.fill();\n        */\n       /*\n        let img_width = 1640;\n        let img_height = 2360;\n\n        context.drawImage(\n            player_img,\n            0,\n            0,\n            img_width,\n            img_height,\n            this.position.x,\n            this.position.y,\n            this.width,\n            this.height\n        );\n        */\n\n        context.drawImage(\n            player_img,\n            this.img_position_x,\n            this.img_position_y,\n            this.img_width,\n            this.img_height,\n            this.position.x,\n            this.position.y,\n            this.width,\n            this.height\n        );\n        \n    }\n\n    update(dt){\n        if (!dt) {\n            return\n        };\n\n        this.position.x += this.Xspeed;\n        this.position.y += this.Yspeed;\n\n        if (this.position.x <= 0){\n            this.position.x = 0;\n        }\n        if (this.position.x >= this.gameWidth - this.width){\n            this.position.x = this.gameWidth - this.width;\n        }\n        if (this.position.y <= 0){\n            this.position.y = 0;\n        }\n        if (this.position.y >= this.gameHeight - this.height){\n            this.position.y = this.gameHeight - this.height;\n        }\n\n    }\n\n    moveLeft(){\n        this.Xspeed = -this.maxSpeed;\n    }\n\n    moveUp(){\n        this.Yspeed = -this.maxSpeed;\n    }\n\n    moveRight(){\n        this.Xspeed = this.maxSpeed;\n    }\n\n    moveDown(){\n        this.Yspeed = this.maxSpeed;\n    }\n\n    stopX(){\n        this.Xspeed = 0;\n    }\n\n    stopY(){\n        this.Yspeed = 0;\n    }\n\n    reset(){\n        this.lives = 3;\n        this.score = 0;\n        this.position = {\n            x: this.gameWidth / 2 - this.width / 2,\n            y: this.gameHeight - this.height - 10,\n        };\n    }\n}","import Projectile from \"./projectile\";\n\nexport default class Projectile_Controller{\n    projectiles = [];\n    timerTillNextProjectile = 100;\n    isShooting = false;\n\n\n    constructor(player){\n        this.player = player;\n        setInterval(() => {\n            this.shoot();\n            if (this.timerTillNextProjectile <= 0) {\n                this.timerTillNextProjectile = 100\n            } else {\n                this.timerTillNextProjectile -= 10;\n            }\n        }, 20);\n    }\n\n    draw(context, projectile, projectile_image){\n        if (projectile.position.y <= 0){\n            let index = this.projectiles.indexOf(projectile);\n            this.projectiles.splice(index, 1);\n        }\n        else{\n            //context.fillStyle = \"white\";\n            //context.fillRect(projectile.position.x - projectile.width / 2, projectile.position.y, projectile.width, projectile.height);\n            let image_width = 550;\n            let image_height = 570;\n\n            context.drawImage(\n                projectile_image,\n                0,\n                0,\n                image_width,\n                image_height,\n                projectile.position.x - projectile.width / 2,\n                projectile.position.y,\n                projectile.width, \n                projectile.height\n                );\n        }\n    }\n\n    update = (dt, projectile) => {\n        if (!dt) return;\n\n        projectile.position.y -= projectile.maxspeed;\n    }\n\n    toggleShootingOn = () => {\n        this.isShooting = true;\n    }\n\n    toggleShootingOff = () => {\n        this.isShooting = false;\n    }\n\n    shoot = () => {\n        if (this.isShooting && this.timerTillNextProjectile <= 0){\n            this.projectiles.push(new Projectile(this.player));\n        }\n    }\n    \n    reset = () => {\n        this.projectiles = [];\n        this.timerTillNextProjectile = 0;\n    }\n}","import Enemy from \"./enemy\";\n\nexport default class Enemy_Controller{\n    constructor(GAME_WIDTH, GAME_HEIGHT){\n        this.enemies = [];\n\n        this.GAME_HEIGHT = GAME_HEIGHT;\n        this.GAME_WIDTH = GAME_WIDTH;\n\n        this.default_delay = 150;\n        this.spawn_delay = 150;\n    }\n\n    draw(context, enemy, player, enemy_image){\n        if (enemy.position.y >= this.GAME_HEIGHT){\n            let index = this.enemies.indexOf(enemy);\n            this.enemies.splice(index, 1);\n            player.lives -= 1;\n        }\n        else{\n            switch(enemy.health){\n                case 3:\n                    context.drawImage(\n                        enemy_image,\n                        130,\n                        120,\n                        670,\n                        632,\n                        enemy.position.x,\n                        enemy.position.y,\n                        enemy.width,\n                        enemy.height\n                    );\n                    break;\n                case 2:\n                    context.drawImage(\n                        enemy_image,\n                        860,\n                        120,\n                        670,\n                        632,\n                        enemy.position.x,\n                        enemy.position.y,\n                        enemy.width,\n                        enemy.height\n                    );\n                    break;\n                case 1:\n                    context.drawImage(\n                        enemy_image,\n                        1588,\n                        120,\n                        692,\n                        632,\n                        enemy.position.x,\n                        enemy.position.y,\n                        enemy.width,\n                        enemy.height\n                    );\n            };\n        }   \n\n\n    }\n\n    update(dt, enemy){\n        if (!dt) return;\n\n        enemy.position.y += enemy.speedY;\n    }\n\n    spawn(){\n        if (this.spawn_delay == 0){\n            this.enemies.push(new Enemy(this.GAME_WIDTH));\n            this.spawn_delay = this.default_delay;\n            if (this.default_delay != 30){\n                this.default_delay -= 3;\n            }\n        }\n        this.spawn_delay -= 1;\n    }\n\n    reset(){\n        this.enemies = [];\n        this.default_delay = 150;\n        this.spawn_delay = 150;\n    }\n}","export default class Collision_Controller{\n    constructor(projectile_controller, enemy_controller){\n        this.projectile_controller = projectile_controller;\n        this.enemy_controller = enemy_controller;\n    }\n\n    enemy_projectile_collision(player){\n        this.projectile_controller.projectiles.forEach(projectile => {\n            this.enemy_controller.enemies.forEach(enemy => {\n                if (projectile.position.y <= enemy.position.y + enemy.height && projectile.position.x + projectile.width >= enemy.position.x \n                    && projectile.position.x <= enemy.position.x + enemy.width){\n                    \n                    let projectile_index = this.projectile_controller.projectiles.indexOf(projectile);\n                    let enemy_index = this.enemy_controller.enemies.indexOf(enemy);\n                    \n                    if (enemy.health == 1){\n                        player.score += 100;\n\n                        this.projectile_controller.projectiles.splice(projectile_index, 1);\n                        this.enemy_controller.enemies.splice(enemy_index, 1);\n                    }\n                    else{\n                        enemy.health -= 1;\n                        this.projectile_controller.projectiles.splice(projectile_index, 1);\n                    }\n                }\n            })\n        })\n    }\n}","export default class InputHandler{\n    constructor(player, projectile_controller, start_button){\n        document.addEventListener(\"keydown\", event => { //keydown for player movement\n            switch(event.keyCode){\n                case 37:\n                    player.moveLeft();\n                    break;\n\n                case 38:\n                    player.moveUp();\n                    break;\n\n                case 39:\n                    player.moveRight();\n                    break;\n\n                case 40:\n                    player.moveDown();\n                    break;\n\n                case 65:\n                    player.moveLeft();\n                    break;\n\n                case 87:\n                    player.moveUp();\n                    break;\n\n                case 68:\n                    player.moveRight();\n                    break;\n\n                case 83:\n                    player.moveDown();\n                    break;\n\n                case 80:\n                    projectile_controller.timerTillNextProjectile = 0;\n                    projectile_controller.toggleShootingOn();\n                    break;\n                    \n                case 32:\n                    projectile_controller.timerTillNextProjectile = 0;\n                    projectile_controller.toggleShootingOn();\n                    break;\n            }\n        })\n\n        document.addEventListener(\"keyup\", event => { //keyup for player movement\n            switch(event.keyCode){\n                case 37:\n                    if (player.Xspeed < 0){\n                        player.stopX();\n                    }\n                    break;\n\n                case 38:\n                    if (player.Yspeed < 0){\n                        player.stopY();\n                    }\n                    break;\n\n                case 39:\n                    if (player.Xspeed > 0){\n                        player.stopX();\n                    }\n                    break;\n\n                case 40:\n                    if (player.Yspeed > 0){\n                        player.stopY();\n                    }\n                    break;\n\n                case 65:\n                    if (player.Xspeed < 0){\n                        player.stopX();\n                    }\n                    break;\n\n                case 87:\n                    if (player.Yspeed < 0){\n                        player.stopY();\n                    }\n                    break;\n\n                case 68:\n                    if (player.Xspeed > 0){\n                        player.stopX();\n                    }\n                    break;\n\n                case 83:\n                    if (player.Yspeed > 0){\n                        player.stopY();\n                    }\n                    break;\n                \n                case 32:\n                    //projectile_controller.timerTillNextProjectile = 100;\n                    projectile_controller.toggleShootingOff()\n                    break;\n\n                case 80:\n                    //projectile_controller.timerTillNextProjectile = 100;\n                    projectile_controller.toggleShootingOff()\n                    break;\n            }\n        });\n    }\n}"],"names":["Projectile","constructor","player","this","maxspeed","speedY","width","height","position","x","y","Enemy","GAME_WIDTH","health","tempx","Math","floor","random","context","document","getElementById","getContext","start_button","start_button_label","side_context","control_context","projectile_img","Image","src","player_img","lose_message","control_pics","enemies_pics","GAME_HEIGHT","gameWidth","gameHeight","img_width","img_height","img_position_x","img_position_y","maxSpeed","Xspeed","Yspeed","lives","score","draw_lives","drawImage","draw","update","dt","moveLeft","moveUp","moveRight","moveDown","stopX","stopY","reset","projectile_controller","projectiles","timerTillNextProjectile","isShooting","setInterval","shoot","projectile","projectile_image","index","indexOf","splice","image_width","image_height","toggleShootingOn","toggleShootingOff","push","enemy_controller","enemies","default_delay","spawn_delay","enemy","enemy_image","spawn","collision_controller","enemy_projectile_collision","forEach","projectile_index","enemy_index","last_time","game_loop","time_stamp","delta_time","clearRect","fillText","SIDE_HEIGHT","style","innerHTML","fillStyle","font","requestAnimationFrame","addEventListener","event","keyCode","e"],"sourceRoot":""}